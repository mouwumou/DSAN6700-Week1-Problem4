ml_app.train
============

.. py:module:: ml_app.train


Classes
-------

.. autoapisummary::

   ml_app.train.Model


Module Contents
---------------

.. py:class:: Model(test_size=0.5)

   A simple machine learning model class using K-Nearest Neighbors (KNN) on the Iris dataset.

   This class trains a KNN classifier on the Iris dataset and provides functionality 
   to make predictions on new data. The class also evaluates the model's performance 
   using accuracy score on a test dataset split.

   Attributes:
       dataset (str): The name of the dataset used, set to "iris".
       architecture (str): The architecture/model type, set to "KNN".
       features (list): List of feature names in the dataset.
       labels (list): List of target label names in the dataset.
       model (KNeighborsClassifier): The trained KNN classifier model.
       eval (float): The evaluation accuracy score of the model on the test dataset.

   Args:
       test_size (float, optional): The proportion of the dataset to include in the test split. 
           Defaults to 0.5 (50% training, 50% testing).


   .. py:attribute:: dataset
      :value: 'iris'



   .. py:attribute:: architecture
      :value: 'KNN'



   .. py:method:: __call__(data)

      Make predictions on new data.

      Args:
          data (iterable): A collection of records to be classified. Each record should be 
              a list or array of numerical values representing the features.

      Yields:
          str: Predicted label for each input record.

      Raises:
          ValueError: If the input data record is not correctly formatted or does not match 
              the expected feature length.



   .. py:method:: _init_data(test_size=0.5)

      Initialize and split the Iris dataset into training and testing sets.

      Args:
          test_size (float, optional): The proportion of the dataset to use for testing. 
              Defaults to 0.5.



   .. py:method:: _score()

      Evaluate the model's accuracy on the test dataset.

      Returns:
          float: The accuracy score of the model.



   .. py:method:: _train(test_size=0.5)

      Train the KNN classifier on the training data.

      Args:
          test_size (float, optional): The proportion of the dataset to use for testing. 
              Defaults to 0.5.



